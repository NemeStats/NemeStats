@model UI.Models.PlayedGame.PlayedGamesViewModel

@{
    Layout = null;
}

@using UI.HtmlHelpers
@using UI.Models.Players
<div class="panel panel-primary">
    <div class="panel-heading">
        <h4>Showing <span class="badge">@Model.PlayedGameDetailsViewModels.Count</span> Played Games</h4>
        @if (Model.PlayedGameDetailsViewModels.Count == 100)
        {
            <h5><font color="#29ABA4"><i>Note: You can only receive up to 100 games, narrow your search for better results.</i></font></h5>
        } 
    </div>
    <div class="panel-body">
        @if (Model.UserCanEdit && Model.GamingGroupId.HasValue)
        {
            <div class="well">
                <div class="row">
                    <div class="col-md-6">
                        <a href="@Url.Action(MVC.PlayedGame.ActionNames.Create, MVC.PlayedGame.Name, new {})" class="btn btn-primary" id="gtm-recordplayedgamebutton-fromplayedgames" title="Record a new Played Game">
                            <span class="fa fa-plus-circle"></span>&nbsp;Record Played Game
                        </a>
                    </div>
                    <div class="col-md-6">

                        @if (Model.ShowSearchLinkInResultsHeader)
                        {
                            <div class="pull-right">
                                <div class="btn-group btn-group-sm">
                                    @{ var fileRequestUrl = "/api/v2/PlayedGamesExcel/?gamingGroupId=" + Model.GamingGroupId.Value; }
                                    <a href="@fileRequestUrl" id="playedGamesExcelDownload" class="btn btn-default" data-container="body" data-toggle="popover" data-placement="top"
                                       data-content="Export all of your played games to Microsoft Excel (.xlsx)">
                                        <i class="fa fa-download"></i>&nbsp;Export to excel
                                    </a>
                                    <a href="@Url.Action(MVC.PlayedGame.Search())" id="playedGamesExcelDownload" class="btn btn-default" data-container="body" data-toggle="popover" data-placement="left"
                                       data-content="Perform an advanced search over Played Games in this Gaming Group">
                                        <i class="fa fa-search"></i>&nbsp;Advanced search
                                    </a>
                                </div>
                            </div>
                        }

                    </div>
                </div>
            </div>
        }
        <div class="flip-scroll" id="playedGamesList">
            <table class="table table-striped table-hover gameDefinitionsList">
                <thead>
                <tr>
                    <th class="bgg-link-head"></th>
                    <th class="name-head">
                        Game Name
                    </th>
                    <th>
                        Date Played
                    </th>
                    <th class="result-head">
                        Result
                    </th>
                    <th class="edit-head">
                    </th>
                </tr>
                </thead>
                <tbody class="list clickable-row" id="playedGamesTbody">
                @foreach (var playedGameDetailsViewModel in Model.PlayedGameDetailsViewModels)
                {
                    <tr class="game-item" data-details-url="@Url.Action("Details", "PlayedGame", new {id = playedGameDetailsViewModel.PlayedGameId})" title="View Played Game details">
                        <td class="bgg-link-col">
                            @if (playedGameDetailsViewModel.BoardGameGeekUri != null)
                            {

                                if (!string.IsNullOrEmpty(playedGameDetailsViewModel.ThumbnailImageUrl))
                                {
                                    <a href="@Url.Action(MVC.GameDefinition.ActionNames.Details,MVC.GameDefinition.Name,new {id=playedGameDetailsViewModel.GameDefinitionId})">
                                        <img class="bgg-thumbnail" src="@playedGameDetailsViewModel.ThumbnailImageUrl" alt="@playedGameDetailsViewModel.GameDefinitionName" title="View Game Definition details" />
                                    </a>
                                }
                                else
                                {
                                    <a href="@playedGameDetailsViewModel.BoardGameGeekUri.AbsoluteUri" target="_blank;">
                                        <img src="~/Content/Images/bgg_small.png" alt="View on BoardGameGeek.com" title="View on BoardGameGeek.com" />
                                    </a>
                                }

                            }
                        </td>
                        <td class="name-col">
                            <b>
                                @Html.ActionLink(playedGameDetailsViewModel.GameDefinitionName, MVC.GameDefinition.ActionNames.Details, MVC.GameDefinition.Name, new { id = playedGameDetailsViewModel.GameDefinitionId }, new { title = "View Game Definition details" })
                            </b>
                        </td>
                        <td>
                            @playedGameDetailsViewModel.DatePlayed.ToShortDateString()
                        </td>
                        <td class="result-col">
                            @foreach (var playerGameResultDetails in playedGameDetailsViewModel.PlayerResults)
                            {
                                @Html.Partial(MVC.PlayedGame.Views._GameResult, playerGameResultDetails)
                            }
                        </td>
                        <td>
                            @if (playedGameDetailsViewModel.UserCanEdit)
                            {
                                <a href="@Url.Action("Edit", "PlayedGame", new {id = playedGameDetailsViewModel.PlayedGameId})" title="Edit Played Game">
                                    <i class="fa fa-pencil fa-2x"></i>
                                </a>
                                <a href="@Url.Action("Delete", "PlayedGame", new {id = playedGameDetailsViewModel.PlayedGameId})" title="Delete Played Game">
                                    <i class="fa fa-trash-o fa-2x"></i>
                                </a>
                            }
                        </td>
                        <td>
                            @using (Html.BeginForm("/DangerousDelete", "PlayedGame"))
                            {
                                @Html.AntiForgeryToken()
                                <span class="form-actions no-color">
                                    <input type="hidden" id="id" name="id" value="@playedGameDetailsViewModel.PlayedGameId" />
                                    <input type="submit" value="Dangerous Delete" class="btn btn-default btn-danger" title="Dangerous Delete Button" />
                                </span>
                            }
                        </td>
                    </tr>
                            }
                </tbody>
            </table>
            <ul class="pagination"></ul>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        var clickableRows = new window.Views.Shared.ClickableRows();
        var settings = { tbodyId: "playedGamesTbody" };
        clickableRows.init(settings);
    });
</script>